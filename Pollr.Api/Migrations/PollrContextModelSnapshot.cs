// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pollr.Api.Data;

namespace Pollr.Api.Migrations
{
    [DbContext(typeof(PollrContext))]
    partial class PollrContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pollr.Api.Models.PollDefinitions.CandidateAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerText");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsCorrectAnswer");

                    b.Property<bool>("IsDisabled");

                    b.Property<int?>("QuestionDefinitionId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionDefinitionId");

                    b.ToTable("CandidateAnswer");
                });

            modelBuilder.Entity("Pollr.Api.Models.PollDefinitions.PollDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsPublished");

                    b.Property<string>("Name");

                    b.Property<string>("Owner");

                    b.Property<string>("Theme");

                    b.HasKey("Id");

                    b.ToTable("PollDefinitions");
                });

            modelBuilder.Entity("Pollr.Api.Models.PollDefinitions.QuestionDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasCorrectAnswer");

                    b.Property<bool>("IsDisabled");

                    b.Property<int?>("PollDefinitionId");

                    b.Property<string>("QuestionText");

                    b.HasKey("Id");

                    b.HasIndex("PollDefinitionId");

                    b.ToTable("QuestionDefinition");
                });

            modelBuilder.Entity("Pollr.Api.Models.Polls.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerText");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsCorrectAnswer");

                    b.Property<bool>("IsDisabled");

                    b.Property<int?>("QuestionId");

                    b.Property<int>("VoteCount");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("Pollr.Api.Models.Polls.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("CurrentQuestion");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("ExpiryDate");

                    b.Property<string>("Handle");

                    b.Property<bool>("IsPublished");

                    b.Property<string>("Name");

                    b.Property<DateTime>("PollDate");

                    b.Property<int?>("PollDefinitionId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("PollDefinitionId");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("Pollr.Api.Models.Polls.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDisabled");

                    b.Property<int?>("PollId");

                    b.Property<string>("QuestionText");

                    b.Property<int>("TotalVotes");

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Pollr.Api.Models.PollDefinitions.CandidateAnswer", b =>
                {
                    b.HasOne("Pollr.Api.Models.PollDefinitions.QuestionDefinition", "QuestionDefinition")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pollr.Api.Models.PollDefinitions.QuestionDefinition", b =>
                {
                    b.HasOne("Pollr.Api.Models.PollDefinitions.PollDefinition", "PollDefinition")
                        .WithMany("Questions")
                        .HasForeignKey("PollDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pollr.Api.Models.Polls.Answer", b =>
                {
                    b.HasOne("Pollr.Api.Models.Polls.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pollr.Api.Models.Polls.Poll", b =>
                {
                    b.HasOne("Pollr.Api.Models.PollDefinitions.PollDefinition", "PollDefinition")
                        .WithMany()
                        .HasForeignKey("PollDefinitionId");
                });

            modelBuilder.Entity("Pollr.Api.Models.Polls.Question", b =>
                {
                    b.HasOne("Pollr.Api.Models.Polls.Poll", "Poll")
                        .WithMany("Questions")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
